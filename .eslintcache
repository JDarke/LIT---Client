[{"C:\\Users\\UnitA\\Projects\\LIT\\LIT---Client\\src\\components\\chatWindow\\ChatWindow.comp.js":"1","C:\\Users\\UnitA\\Projects\\LIT\\LIT---Client\\src\\App.js":"2","C:\\Users\\UnitA\\Projects\\LIT\\LIT---Client\\src\\components\\header\\Header.comp.js":"3","C:\\Users\\UnitA\\Projects\\LIT\\LIT---Client\\src\\index.js":"4","C:\\Users\\UnitA\\Projects\\LIT\\LIT---Client\\src\\components\\home\\Home.comp.js":"5","C:\\Users\\UnitA\\Projects\\LIT\\LIT---Client\\src\\components\\SelectRoom\\SelectRoom.comp.js":"6","C:\\Users\\UnitA\\Projects\\LIT\\LIT---Client\\src\\components\\footer\\Footer.comp.js":"7","C:\\Users\\UnitA\\Projects\\LIT\\LIT---Client\\src\\components\\menu\\Menu.comp.js":"8","C:\\Users\\UnitA\\Projects\\LIT\\LIT---Client\\src\\components\\modals\\modal.comp.js":"9","C:\\Users\\UnitA\\Projects\\LIT\\LIT---Client\\src\\components\\modals\\modalWithButton.comp.js":"10"},{"size":1393,"mtime":1609598514995,"results":"11","hashOfConfig":"12"},{"size":16261,"mtime":1609936055599,"results":"13","hashOfConfig":"12"},{"size":1877,"mtime":1610095394652,"results":"14","hashOfConfig":"12"},{"size":271,"mtime":1609428945995,"results":"15","hashOfConfig":"12"},{"size":884,"mtime":1609928792356,"results":"16","hashOfConfig":"12"},{"size":3582,"mtime":1609926762020,"results":"17","hashOfConfig":"12"},{"size":802,"mtime":1609428945990,"results":"18","hashOfConfig":"12"},{"size":1120,"mtime":1609583788875,"results":"19","hashOfConfig":"12"},{"size":412,"mtime":1609702324707,"results":"20","hashOfConfig":"12"},{"size":518,"mtime":1609702324708,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"s6bcxj",{"filePath":"25","messages":"26","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"C:\\Users\\UnitA\\Projects\\LIT\\LIT---Client\\src\\components\\chatWindow\\ChatWindow.comp.js",[],["48","49"],"C:\\Users\\UnitA\\Projects\\LIT\\LIT---Client\\src\\App.js",["50","51","52","53","54"],"C:\\Users\\UnitA\\Projects\\LIT\\LIT---Client\\src\\components\\header\\Header.comp.js",["55"],"import React from 'react';\r\nimport './header.scss';\r\nimport litlogowhite from '../../images/litlogowhite.png'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowLeft, faBars } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Header = ({room, name, view, navBack, toggleMenu, typing, usersInRoom, location}) => {\r\n    let path = location.pathname;\r\n\r\n    return  (\r\n        <div className=\"header\" style={path==='/'?{backgroundColor: 'white'}:null}>\r\n             {path === '/chat' && (\r\n                <>\r\n                    <FontAwesomeIcon icon={faArrowLeft} className=\"backLink\" onClick={()=>navBack()}/>\r\n                        <div className=\"headerInfo\">\r\n                            <h2>{room}</h2>\r\n                            <div className=\"usersInRoom\">You{usersInRoom.map((user, i) => \r\n                                user.name !== name && <span key={i}>{', ' + user.name}</span>\r\n                            )}</div>\r\n                        </div>\r\n                        <div className=\"typingInfo\">{typing}</div>\r\n                    <FontAwesomeIcon icon={faBars} className=\"menuLink\" onClick={()=>toggleMenu()}/>\r\n                </>\r\n            )}\r\n            {path === '/' && (\r\n                // <>\r\n                //     <div className=\"logo-wrap\">\r\n                //         <img className=\"logo\" src={litlogowhite} />\r\n                //     </div>\r\n                // </>\r\n                <></>\r\n            )}\r\n            {path === '/rooms' && (\r\n                <>\r\n                    <FontAwesomeIcon icon={faArrowLeft} className=\"backLink\" onClick={()=>navBack()}/>\r\n                        <h2>{name}</h2>\r\n                    <FontAwesomeIcon icon={faBars} className=\"menuLink\" onClick={()=>toggleMenu()}/>\r\n                </>\r\n            )}  \r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Header;","C:\\Users\\UnitA\\Projects\\LIT\\LIT---Client\\src\\index.js",[],["56","57"],"C:\\Users\\UnitA\\Projects\\LIT\\LIT---Client\\src\\components\\home\\Home.comp.js",["58"],"import React from \"react\";\r\nimport litlogowhite from '../../images/litlogowhite.png'\r\n\r\nconst Home = ({ nameText, login, handleChange, warnNameText }) => {\r\n  return (\r\n    <div className=\"pageWrapper\" style={{ marginTop: \"40px\" }}>\r\n      <br />\r\n      <div className=\"logo-wrap\"><img className=\"logo\" src={litlogowhite} /></div>\r\n      <br />\r\n      <br />\r\n      <p>Choose a user name</p>\r\n      <div className=\"warnText\">{warnNameText}</div>\r\n      <form\r\n        className=\"loginForm\"\r\n        action=\"\"\r\n        onSubmit={(e) => e.preventDefault()}\r\n      >\r\n        <input\r\n          placeholder=\"Name\"\r\n          id=\"name\"\r\n          autoComplete=\"off\"\r\n          value={nameText}\r\n          onChange={(e) => handleChange(e, \"nameText\")}\r\n        />\r\n        <button onClick={() => login(nameText)}>Login</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\UnitA\\Projects\\LIT\\LIT---Client\\src\\components\\SelectRoom\\SelectRoom.comp.js",["59"],"import React from \"react\";\r\nimport litlogowhite from '../../images/litlogowhite.png'\r\n\r\nconst SelectRoom = ({\r\n  createRoomText,\r\n  joinRoomText,\r\n  handleClickRoom,\r\n  warnJoinRoomText,\r\n  warnCreateRoomText,\r\n  createRoom,\r\n  joinRoom,\r\n  handleChange,\r\n  handleRoomTab,\r\n  roomsList,\r\n  view,\r\n  name\r\n}) => {\r\n  return (\r\n    <div className=\"pageWrapper\">\r\n        <div className=\"selectRoomTabs\">\r\n            <div className={view === 'createRoom' ? \"roomTab active\": \"roomTab\"} onClick={()=> handleRoomTab('createRoom')}>Create a room</div>\r\n            <div className={view === 'joinRoom' ? \"roomTab active\": \"roomTab\"} onClick={()=> handleRoomTab('joinRoom')}>Join a room</div>\r\n        </div>\r\n            {view === \"createRoom\" && (\r\n                <div className=\"selectWrapper\">\r\n                    <br />\r\n                    {/* <div className=\"logo-wrap\"><img className=\"logo\" src={litlogowhite} /></div> */}\r\n                    <br />\r\n                    <p>Enter a name for your room, and choose whether to make it public</p>\r\n                    <div className=\"warnText\">{warnCreateRoomText}</div>\r\n                    <form\r\n                        className=\"loginForm\"\r\n                        action=\"\"\r\n                        onSubmit={(e) => e.preventDefault()}\r\n                    >\r\n                        <input\r\n                        placeholder=\"Room name\"\r\n                        id=\"room\"\r\n                        autoComplete=\"off\"\r\n                        value={createRoomText}\r\n                        onChange={(e) => handleChange(e, \"createRoomText\")}\r\n                        />\r\n                        \r\n                        <button onClick={() => createRoom(createRoomText)}>Create</button>\r\n                        <span>\r\n                            <input type=\"checkbox\"></input> Room is public\r\n                        </span>\r\n                    </form>\r\n                </div>\r\n            )}\r\n            {view === \"joinRoom\" && (\r\n                <div className=\"selectWrapper\">\r\n                    <br />\r\n                    <br />\r\n                   {/* <div className=\"logo-wrap\"><img className=\"logo\" src={litlogowhite} /></div> */}\r\n                    <p>Select a public room or enter the name of a private room to join</p>\r\n                    <div className=\"warnText\">{warnJoinRoomText}</div>\r\n                    <form\r\n                        className=\"loginForm\"\r\n                        action=\"\"\r\n                        onSubmit={(e) => e.preventDefault()}\r\n                    >\r\n                        <input\r\n                        placeholder=\"Room name\"\r\n                        id=\"room\"\r\n                        autoComplete=\"off\"\r\n                        value={joinRoomText}\r\n                        onChange={(e) => handleChange(e, \"joinRoomText\")}\r\n                        />\r\n                        <button onClick={() => joinRoom(joinRoomText)}>Join</button>\r\n                    </form>\r\n                    <br />\r\n                    <h4>Public Rooms:</h4>\r\n                    <ul className=\"publicRoomsList\" style={{ marginTop: \"-5px\" }}>\r\n                        {roomsList.length > 0 ? (\r\n                        roomsList.map((room, i) => <li className=\"publicRoom\" onClick={() => handleClickRoom(room) } key={i}>{room}</li>)\r\n                        ) : (\r\n                        <li>No public rooms are active</li>\r\n                        )}\r\n                    </ul>\r\n                </div>\r\n            )}\r\n            </div>\r\n  );\r\n};\r\n\r\nexport default SelectRoom;\r\n",["60","61"],"C:\\Users\\UnitA\\Projects\\LIT\\LIT---Client\\src\\components\\footer\\Footer.comp.js",[],"C:\\Users\\UnitA\\Projects\\LIT\\LIT---Client\\src\\components\\menu\\Menu.comp.js",[],"C:\\Users\\UnitA\\Projects\\LIT\\LIT---Client\\src\\components\\modals\\modal.comp.js",[],"C:\\Users\\UnitA\\Projects\\LIT\\LIT---Client\\src\\components\\modals\\modalWithButton.comp.js",[],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":20,"column":7,"nodeType":"68","messageId":"69","endLine":20,"endColumn":15},{"ruleId":"70","severity":1,"message":"71","line":327,"column":6,"nodeType":"72","endLine":327,"endColumn":18,"suggestions":"73"},{"ruleId":"70","severity":1,"message":"74","line":345,"column":6,"nodeType":"72","endLine":345,"endColumn":25,"suggestions":"75"},{"ruleId":"70","severity":1,"message":"76","line":369,"column":6,"nodeType":"72","endLine":369,"endColumn":17,"suggestions":"77"},{"ruleId":"70","severity":1,"message":"78","line":437,"column":6,"nodeType":"72","endLine":437,"endColumn":8,"suggestions":"79"},{"ruleId":"66","severity":1,"message":"80","line":3,"column":8,"nodeType":"68","messageId":"69","endLine":3,"endColumn":20},{"ruleId":"62","replacedBy":"81"},{"ruleId":"64","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":8,"column":34,"nodeType":"85","endLine":8,"endColumn":77},{"ruleId":"66","severity":1,"message":"80","line":2,"column":8,"nodeType":"68","messageId":"69","endLine":2,"endColumn":20},{"ruleId":"62","replacedBy":"86"},{"ruleId":"64","replacedBy":"87"},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"no-unused-vars","'ENDPOINT' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'location.pathname'. Either include them or remove the dependency array.","ArrayExpression",["90"],"React Hook useEffect has missing dependencies: 'leaveRoom', 'logout', 'name', 'room', and 'view'. Either include them or remove the dependency array.",["91"],"React Hook useEffect has missing dependencies: 'clearDeadMessages' and 'messages'. Either include them or remove the dependency array.",["92"],"React Hook useEffect has missing dependencies: 'name' and 'room'. Either include them or remove the dependency array.",["93"],"'litlogowhite' is defined but never used.",["88"],["89"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["88"],["89"],"no-global-assign","no-unsafe-negation",{"desc":"94","fix":"95"},{"desc":"96","fix":"97"},{"desc":"98","fix":"99"},{"desc":"100","fix":"101"},"Update the dependencies array to be: [history, location.pathname, name, room]",{"range":"102","text":"103"},"Update the dependencies array to be: [leaveRoom, location.pathname, logout, name, room, view]",{"range":"104","text":"105"},"Update the dependencies array to be: [clearDeadMessages, messages, roomsList]",{"range":"106","text":"107"},"Update the dependencies array to be: [name, room]",{"range":"108","text":"109"},[9143,9155],"[history, location.pathname, name, room]",[9691,9710],"[leaveRoom, location.pathname, logout, name, room, view]",[10270,10281],"[clearDeadMessages, messages, roomsList]",[12126,12128],"[name, room]"]